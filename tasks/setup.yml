---
- name: Create foundryVTT Group
  group:
    name: "foundry"
    gid: "1180"
    state: present
  become: yes

- name: Create foundryVTT User
  user:
    name: "foundry"
    comment: "FoundryVTT User"
    group: "foundry"
    # groups: "{{ kubeadm.os_user.groups }}"
    uid: "1180"
    shell: "/bin/bash"
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
    ssh_key_comment: "foundry@{{ inventory_hostname }}"
    state: present
  become: yes


- name: Create /srv/foundry directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "foundry"
    group: "foundry"
    mode: 0755
  become: yes
  with_items:
   - "{{ foundryVTT.basedir | default('/srv/foundryVTT')}}"
   - "{{ foundryVTT.basedir | default('/srv/foundryVTT')}}/{{ foundryVTT.datadir | default('foundrydata')}}"
   - "{{ foundryVTT.basedir | default('/srv/foundryVTT')}}/{{ foundryVTT.appdir | default('foundryvtt')}}"

- name: Create foundry-user-directories-directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "foundry"
    group: "foundry"
    mode: 0755
  become: yes
  with_items:
    - "/home/foundry/lib"
    - "/home/foundry/lib/foundryVTT"

- name: Create etc-directory
  file:
    path: "/home/{{ item.name }}/etc"
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: 0755
  become: yes
  with_items:
    - "{{ admin_users }}"
  when:
    - item.name in foundryVTT.admin_users

- name: Generate service-file
  template:
    src: "foundryvtt.service.j2"
    dest: "/home/foundry/lib/foundryVTT/foundryvtt.service"
    owner: "foundry"
    group: "foundry"
    mode: '0664'
  become: yes

- name: Generate config-file
  template:
    src: "foundryvtt_config.cfg.j2"
    dest: "/home/{{ item.name }}/etc/foundryvtt_config.cfg"
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: '0664'
  become: yes
  with_items:
    - "{{ admin_users }}"
  when:
    - item.name in foundryVTT.admin_users